/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Entidades.Equipo;
import Entidades.Jugador;
import Entidades.Persona;
import Enumerados.Demarcacion;
import Sistema.Configuracion;
import java.awt.event.KeyEvent;
import java.io.IOException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class FrameContrato extends javax.swing.JFrame {

    /**
     * Creates new form FrameContrato
     */
    
    
    public FrameContrato() {
        initComponents();
        
        this.cargarComboBox();
        this.cargarTablas(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaListaDePersonas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaContratados = new javax.swing.JTable();
        cbEquipos = new javax.swing.JComboBox<>();
        btnContratar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnLiberar = new javax.swing.JButton();
        rbDisponible = new javax.swing.JRadioButton();
        rbTodos = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CONTRATO DE JUGADORES DE LA LIGA 1");

        tablaListaDePersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaListaDePersonas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaListaDePersonasKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tablaListaDePersonas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tablaContratados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaContratados.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tablaContratadosKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(tablaContratados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cbEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEquiposActionPerformed(evt);
            }
        });

        btnContratar.setText("Contratar");
        btnContratar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnContratarActionPerformed(evt);
            }
        });

        btnRegresar.setText("regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("Contrato de Jugadores");

        btnLiberar.setText("Liberar");
        btnLiberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLiberarActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbDisponible);
        rbDisponible.setText("Disponibles");
        rbDisponible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDisponibleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbTodos);
        rbTodos.setSelected(true);
        rbTodos.setText("Todos");
        rbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTodosActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Sugerencia: clickear las tablas para contratar/liberar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rbTodos)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(rbDisponible)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(cbEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnContratar)
                        .addGap(47, 47, 47)
                        .addComponent(btnLiberar)))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addGap(54, 54, 54))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(rbTodos)
                        .addGap(18, 18, 18)
                        .addComponent(rbDisponible)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnContratar)
                    .addComponent(cbEquipos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLiberar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:
       
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void cbEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEquiposActionPerformed
        // TODO add your handling code here:
        this.cargarTablas(this.cbEquipos.getSelectedIndex());
        
    }//GEN-LAST:event_cbEquiposActionPerformed

    private void btnContratarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnContratarActionPerformed
        // TODO add your handling code here:
       int fila=0;
        int columna=0;
        String posicion="";
        Persona persona;
        Equipo equipo;
        

        try{

            fila=this.tablaListaDePersonas.getSelectedRow();
            posicion= (String)this.tablaListaDePersonas.getValueAt(fila,columna);

         // persona = Configuracion.personas.buscarJugadorPorNombre(posicion);
          persona=Configuracion.personas.getPersonas().get(Integer.parseInt(posicion)-1);
          
          equipo = Configuracion.equipos.getEquipos().get(this.cbEquipos.getSelectedIndex());
            //jugador=Configuracion.personas.getListaJugador().get(0);
          if(!equipo.contratarJugador((Jugador)persona, 150000, "02/06/2020")){
              
              JOptionPane.showMessageDialog(this, "No Disponible");
          }  
          
           
          this.cargarTablas(this.cbEquipos.getSelectedIndex());
        
        }catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "ELIGE ELEMENTO: "+posicion);
          
         }catch(Exception e){
            JOptionPane.showMessageDialog(this, "ELIGE ELEMENTO: "+posicion);
          
         }    
        

        
        
    }//GEN-LAST:event_btnContratarActionPerformed

    private void btnLiberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLiberarActionPerformed

        // TODO add your handling code here:
        int fila=0;
        int columna=0;
        String nombre="";
        Jugador jugador;
        Equipo equipo;
        try{

            fila=this.tablaContratados.getSelectedRow();
            nombre= (String)this.tablaContratados.getValueAt(fila,columna);

        //  jugador=Configuracion.personas.buscarJugadorPorNombre(nombre);
      
          equipo = Configuracion.equipos.getEquipos().get(this.cbEquipos.getSelectedIndex());
          jugador = equipo.getJugador(nombre);
     //  if(equipo.obtenerPlantel(NORMAL))
          
         if( equipo.liberarJugador(jugador)){
             JOptionPane.showMessageDialog(this, "Liberado: "+jugador.getNombre());
         
         }else{
            JOptionPane.showMessageDialog(this, "Ya liberado"); 
         }
          
       this.cargarTablas(this.cbEquipos.getSelectedIndex());

        }catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "ELIGE ELEMENTO: "+e);
        }
        
    }//GEN-LAST:event_btnLiberarActionPerformed

    private void rbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTodosActionPerformed
        // TODO add your handling code here:
        cargarTablas(0);
    }//GEN-LAST:event_rbTodosActionPerformed

    private void rbDisponibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDisponibleActionPerformed
        // TODO add your handling code here:
        cargarTablas(0);
    }//GEN-LAST:event_rbDisponibleActionPerformed

    private void tablaListaDePersonasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaListaDePersonasKeyPressed
        // TODO add your handling code here:
        
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

         int fila=0;
        int columna=0;
        String posicion="";
        Persona persona;
        Equipo equipo;
        

        try{

            fila=this.tablaListaDePersonas.getSelectedRow();
            posicion= (String)this.tablaListaDePersonas.getValueAt(fila,columna);

         // persona = Configuracion.personas.buscarJugadorPorNombre(posicion);
          persona=Configuracion.personas.getPersonas().get(Integer.parseInt(posicion)-1);
          
          equipo = Configuracion.equipos.getEquipos().get(this.cbEquipos.getSelectedIndex());
            //jugador=Configuracion.personas.getListaJugador().get(0);
          if(!equipo.contratarJugador((Jugador)persona, 150000, "02/06/2020")){
              
              JOptionPane.showMessageDialog(this, "No Disponible");
          }  
          
           
          this.cargarTablas(this.cbEquipos.getSelectedIndex());
        
        }catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "ELIGE ELEMENTO: "+posicion);
          
         }  
        

        }
        
        
    }//GEN-LAST:event_tablaListaDePersonasKeyPressed

    private void tablaContratadosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tablaContratadosKeyPressed
        // TODO add your handling code here:
        
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

         int fila=0;
        int columna=0;
        String nombre="";
        Jugador jugador;
        Equipo equipo;
        try{

            fila=this.tablaContratados.getSelectedRow();
            nombre= (String)this.tablaContratados.getValueAt(fila,columna);

        //  jugador=Configuracion.personas.buscarJugadorPorNombre(nombre);
      
          equipo = Configuracion.equipos.getEquipos().get(this.cbEquipos.getSelectedIndex());
          jugador = equipo.getJugador(nombre);
           
         if( equipo.liberarJugador(jugador)){
             JOptionPane.showMessageDialog(this, "Liberado: "+jugador.getNombre());
         
         }else{
            JOptionPane.showMessageDialog(this, "Ya liberado"); 
         }
          
       this.cargarTablas(this.cbEquipos.getSelectedIndex());

        }catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "ELIGE ELEMENTO: "+e);
        }
        
        

        }
        
    }//GEN-LAST:event_tablaContratadosKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameContrato.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameContrato().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnContratar;
    private javax.swing.JButton btnLiberar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbEquipos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbDisponible;
    private javax.swing.JRadioButton rbTodos;
    private javax.swing.JTable tablaContratados;
    private javax.swing.JTable tablaListaDePersonas;
    // End of variables declaration//GEN-END:variables

    private void cargarTablas(int index){
        try {
            
             if(rbTodos.isSelected()){
             DefaultTableModel tabla = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(1),
                Configuracion.personas.getTituloPersonas(1));
        this.tablaListaDePersonas.setModel(tabla);
         this.tablaListaDePersonas.getColumnModel().getColumn(0).setPreferredWidth(10);
        
            
        }else if(rbDisponible.isSelected()){
            
            DefaultTableModel tabla = new DefaultTableModel(Configuracion.personas.getMatrizJugadoresDisponibles(),
                Configuracion.personas.getTituloPersonas(1));
        this.tablaListaDePersonas.setModel(tabla);
         this.tablaListaDePersonas.getColumnModel().getColumn(0).setPreferredWidth(10);
            
        }
        
       
        DefaultTableModel tabla2 = new DefaultTableModel(Configuracion.equipos.getEquipos().get(index).getMatrizJugadores(),
                Configuracion.equipos.getEquipos().get(index).getTitulosJugadores());
        this.tablaContratados.setModel(tabla2);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "ERROR EQUIPO: "+e);
        }
 
       
        
        
    }
    
    private void cargarComboBox(){
        DefaultComboBoxModel combo = new DefaultComboBoxModel();
        
        for(int i=0;i<Configuracion.equipos.cantidadDeEquipos();i++){
            
           // this.cbEquipos.addItem(Configuracion.equipos.getEquipos().get(i).getNombre());
           
            
            combo.addElement(Configuracion.equipos.getEquipos().get(i));
            
        }
        
        this.cbEquipos.setModel(combo);
        
      
        
        
        
        
        
    }
}

