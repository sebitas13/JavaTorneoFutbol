/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;
import Entidades.*;
import Sistema.Configuracion;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author ACER
 */
public class FrameGestionPersonas extends javax.swing.JFrame {

    /**
     * Creates new form FrameListaDePersonas
     */
    public FrameGestionPersonas() {
        initComponents();
        cargarTabla();
         
        
        if(Configuracion.usuario.getNombre().equalsIgnoreCase("Administrador")){
            this.btnAgregar.setEnabled(true);
            this.btnEliminar.setEnabled(true);
            this.btnModificar.setEnabled(true);
            this.btnRegresar.setEnabled(true);
            
        }else{
            
            this.btnAgregar.setEnabled(false);
            this.btnEliminar.setEnabled(false);
            this.btnModificar.setEnabled(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panTop = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panCentral = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPersonas = new javax.swing.JTable();
        rbtnJugador = new javax.swing.JRadioButton();
        rbtnArbitro = new javax.swing.JRadioButton();
        rbtEntrenador = new javax.swing.JRadioButton();
        panBotones = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panTop.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Gestion de Personas");

        javax.swing.GroupLayout panTopLayout = new javax.swing.GroupLayout(panTop);
        panTop.setLayout(panTopLayout);
        panTopLayout.setHorizontalGroup(
            panTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTopLayout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panTopLayout.setVerticalGroup(
            panTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTopLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jScrollPane1.setEnabled(false);

        tablaPersonas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tablaPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaPersonas);

        buttonGroup1.add(rbtnJugador);
        rbtnJugador.setText("Jugadores");
        rbtnJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnJugadorActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnArbitro);
        rbtnArbitro.setText("Arbitros");
        rbtnArbitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnArbitroActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtEntrenador);
        rbtEntrenador.setText("Entrenadores");
        rbtEntrenador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtEntrenadorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panCentralLayout = new javax.swing.GroupLayout(panCentral);
        panCentral.setLayout(panCentralLayout);
        panCentralLayout.setHorizontalGroup(
            panCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panCentralLayout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addComponent(rbtnJugador)
                .addGap(186, 186, 186)
                .addComponent(rbtnArbitro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtEntrenador)
                .addGap(141, 141, 141))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panCentralLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        panCentralLayout.setVerticalGroup(
            panCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panCentralLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panCentralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnJugador)
                    .addComponent(rbtnArbitro)
                    .addComponent(rbtEntrenador))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panBotonesLayout = new javax.swing.GroupLayout(panBotones);
        panBotones.setLayout(panBotonesLayout);
        panBotonesLayout.setHorizontalGroup(
            panBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBotonesLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnAgregar)
                .addGap(36, 36, 36)
                .addComponent(btnModificar)
                .addGap(33, 33, 33)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegresar)
                .addGap(26, 26, 26))
        );
        panBotonesLayout.setVerticalGroup(
            panBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar)
                    .addComponent(btnRegresar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panTop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(panBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panTop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(panCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(panBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
       
        if(this.rbtnJugador.isSelected()){
          FrameJugador frm = new FrameJugador();
        frm.setLocationRelativeTo(null);
        frm.setVisible(true);
       
            
        }else if(this.rbtnArbitro.isSelected()){
            
        FrameArbitro frm2 = new FrameArbitro();
        frm2.setLocationRelativeTo(null);
        frm2.setVisible(true);
        
            
        }else if(this.rbtEntrenador.isSelected()){
            FrameEntrenador frm3 = new FrameEntrenador();
            frm3.setLocationRelativeTo(null);
            frm3.setVisible(true);
        }
        
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int fila=0;
        int columna=0;
        String posicion="";
        Persona persona;

        try{

            fila=this.tablaPersonas.getSelectedRow();
            posicion= (String)this.tablaPersonas.getValueAt(fila,columna);

          persona=Configuracion.personas.getPersonas().get(Integer.parseInt(posicion)-1);
          
            //jugador=Configuracion.personas.getListaJugador().get(0);
                   
            FrameJugador frm = new FrameJugador((Jugador)persona);
            frm.setLocationRelativeTo(null);
            frm.setVisible(true);
            this.dispose();

        }catch(IndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "ELIGE ELEMENTO: "+posicion);
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:

        try{
            
            int fila=0;
            int columna =0;
            String posicion="";
            //Jugador jugador;
            //Arbitro arbitro;
            Persona persona;
            
           if(this.rbtnJugador.isSelected()){
                
            fila=this.tablaPersonas.getSelectedRow();
            
           // JOptionPane.showMessageDialog(this, "Fila escogida: "+fila);
         
         
            posicion = (String)this.tablaPersonas.getValueAt(fila,columna);
            
          //  JOptionPane.showMessageDialog(this, "Posicion escogida: "+posicion);
            
            persona=Configuracion.personas.getPersonas().get(Integer.parseInt(posicion)-1);
                
                
           if(persona != null){
                
                int confirmado = JOptionPane.showConfirmDialog(this,"¿seguro?");
                
                if(JOptionPane.OK_OPTION==confirmado){
                    
                     Configuracion.personas.eliminar(persona);

                    JOptionPane.showMessageDialog(this, "Eliminado");
                    
                    
                    
                }
                
                
               
            }else{
                JOptionPane.showMessageDialog(this,"Jugador no encontrado");
            }

                
           }else if(this.rbtnArbitro.isSelected()) {
               
             fila=this.tablaPersonas.getSelectedRow();
         
         
            posicion = (String)this.tablaPersonas.getValueAt(fila,columna);
            persona=Configuracion.personas.getPersonas().get(Integer.parseInt(posicion)-1);
            
                   
            if(persona != null){
                
                int confirmado = JOptionPane.showConfirmDialog(this,"¿seguro?");
                
                if(JOptionPane.OK_OPTION==confirmado){
                    
                     Configuracion.personas.eliminar(persona);

                    JOptionPane.showMessageDialog(this, "Eliminado");
                    
                    
                    
                }
                
                
               
            }else{
                JOptionPane.showMessageDialog(this,"Arbitro no encontrado");
            }

          
               
            }else if(this.rbtEntrenador.isSelected()) {
               
             fila=this.tablaPersonas.getSelectedRow();
        
         
            posicion = (String)this.tablaPersonas.getValueAt(fila,columna);
            persona=Configuracion.personas.getPersonas().get(Integer.parseInt(posicion)-1);
            
            
            if(persona != null){
                
                int confirmado = JOptionPane.showConfirmDialog(this,"¿seguro?");
                
                if(JOptionPane.OK_OPTION==confirmado){
                    
                     Configuracion.personas.eliminar(persona);
                     ((Entrenador)persona).getEquipo().setEntrenador(null);
                     

                    JOptionPane.showMessageDialog(this, "Eliminado");
                    
                    
                    
                }
                
                
               
            }else{
                JOptionPane.showMessageDialog(this,"Entrenador no encontrado");
            }

          
               
            }
          
            this.cargarTabla();
            
        }catch(IndexOutOfBoundsException p){
            JOptionPane.showMessageDialog(this, "ElEMENTO NO SELECCIONADO: "+p);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        // TODO add your handling code here:

        
        this.dispose();

    }//GEN-LAST:event_btnRegresarActionPerformed

    private void rbtnJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnJugadorActionPerformed
      this.cargarTabla();
      this.controlBotones(true, true, true, true);
        /*  DefaultTableModel tabla;
       tabla = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(1),Configuracion.personas.getTituloPersonas(1));
       this.tablaPersonas.setModel(tabla);
       this.tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10);
       this.btnModificar.setEnabled(true);*/
    }//GEN-LAST:event_rbtnJugadorActionPerformed

    private void rbtnArbitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnArbitroActionPerformed
 //xd       
      this.cargarTabla();
      this.controlBotones(true, false, true, true);
        /*  DefaultTableModel tabla;
        tabla = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(2),Configuracion.personas.getTituloPersonas(2));
        this.tablaPersonas.setModel(tabla);
        this.tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10);
        this.btnModificar.setEnabled(false);*/
    }//GEN-LAST:event_rbtnArbitroActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.rbtnJugador.setSelected(true);
        
        //CARGAR TABLA
        
         DefaultTableModel table = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(1),
                                        Configuracion.personas.getTituloPersonas(1));
        this.tablaPersonas.setModel(table);
        this.tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10);  
         this.btnModificar.setEnabled(true);
       
    }//GEN-LAST:event_formWindowOpened

    private void rbtEntrenadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtEntrenadorActionPerformed
        this.cargarTabla();
        this.controlBotones(true, false, true, true);
    }//GEN-LAST:event_rbtEntrenadorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameGestionPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameGestionPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameGestionPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameGestionPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameGestionPersonas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panBotones;
    private javax.swing.JPanel panCentral;
    private javax.swing.JPanel panTop;
    private javax.swing.JRadioButton rbtEntrenador;
    private javax.swing.JRadioButton rbtnArbitro;
    private javax.swing.JRadioButton rbtnJugador;
    private javax.swing.JTable tablaPersonas;
    // End of variables declaration//GEN-END:variables

    private void cargarTabla(){
        
        if(this.rbtnJugador.isSelected()){
          DefaultTableModel table = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(1),
                                        Configuracion.personas.getTituloPersonas(1));
        this.tablaPersonas.setModel(table);
        this.tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10);  
         this.btnModificar.setEnabled(true);   
            
        }else if(this.rbtnArbitro.isSelected()){
           DefaultTableModel table = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(2),
                                        Configuracion.personas.getTituloPersonas(2));
        this.tablaPersonas.setModel(table);
        this.tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10); 
        this.btnModificar.setEnabled(false);    
         
        
        }else if(this.rbtEntrenador.isSelected()){
           DefaultTableModel table = new DefaultTableModel(Configuracion.personas.getMatrizPersonas(3),
                                        Configuracion.personas.getTituloPersonas(3));
        this.tablaPersonas.setModel(table);
        this.tablaPersonas.getColumnModel().getColumn(0).setPreferredWidth(10); 
        this.btnModificar.setEnabled(false);    
         
        
        }
        
             

        
    }
    
    private void controlBotones(boolean AGREGAR,boolean MODIFICAR,boolean ELIMINAR,boolean REGRESAR){
        this.btnAgregar.setEnabled(AGREGAR);
        this.btnModificar.setEnabled(MODIFICAR);
        this.btnEliminar.setEnabled(ELIMINAR);
        this.btnRegresar.setEnabled(REGRESAR);
        
    }
    
}
